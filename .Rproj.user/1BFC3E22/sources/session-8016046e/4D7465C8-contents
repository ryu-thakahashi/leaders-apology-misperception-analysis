---
title: "Leaders' Misperceptions of the Eectiveness of Their Apologies to Subordinates"
author: "Ryu Takahashi"
date: "`r Sys.Date()`"
output:
  rmdformats::readthedown:
    toc_depth: 4
    thumbnails: true
    lightbox: true
    gallery: false
    highlight: tango
knitr:
  opts_chunk:
    fig_width: 16  # 幅（インチ単位）
---

## Preparation

```{r setup, include=FALSE}
rm(list = ls())
Sys.setenv(LANG = "en")
options(width = 120)
sessionInfo()
```

### Load Libraries

```{r}
pacman::p_load(
  dplyr,
  ggplot2,
  tidyr,
  psych,
  gridExtra
)
```

### Load Data

```{r}
raw_df <- read.csv("data/raw/study_2.csv")
glimpse(raw_df)
```

### Data Exclusion

```{r}
# glimpse(raw_df)
# delete duplicated IP addresses
IP_deleted_df <- raw_df |> distinct(IPAddress, .keep_all = TRUE)
nrow(raw_df) - nrow(IP_deleted_df) # (118 in Excel)

# not consent
consent_df <- IP_deleted_df |> dplyr::filter(consensus == 1)
nrow(IP_deleted_df) - nrow(consent_df) # (105 in Excel)

# consent but not complete
complete_df <- consent_df |> dplyr::filter(Progress > 95)
nrow(consent_df) - nrow(complete_df) # (90 in Excel)

# exclude out of age
age_df <- complete_df |> dplyr::filter(age >= 30 & age <= 51)
nrow(complete_df) - nrow(age_df) # (83 in Excel)

# exclude not employed (66 in Excel)
employed_df <- age_df |> dplyr::filter(working == 1)
nrow(age_df) - nrow(employed_df) # (66 in Excel)

# exclude not having supervisors
superior_df <- employed_df |> dplyr::filter(exist_supervisors == 1)
nrow(employed_df) - nrow(superior_df) # (256 in Excel)

# exclude not having subordinates
subordinate_df <- superior_df |> dplyr::filter(exist_subordinates == 1)
nrow(superior_df) - nrow(subordinate_df) # (136 in Excel)

# exclude not passed AC1 (attention check) and AC2 in subordinate
sub_AC1_df <- subordinate_df |> dplyr::filter(sub_AC1 == 2 | is.na(sub_AC1))
nrow(subordinate_df) - nrow(sub_AC1_df) # (136 in Excel)
sub_AC2_df <- sub_AC1_df |> dplyr::filter(sub_AC2 == 5 | is.na(sub_AC2))
nrow(sub_AC1_df) - nrow(sub_AC2_df) # (24 in Excel)

# exclude not passed AC1 and AC2 in supervisor
sup_AC1_df <- subordinate_df |> dplyr::filter(sup_AC1 == 2 | is.na(sup_AC1))
nrow(subordinate_df) - nrow(sup_AC1_df) # (89 in Excel)
sup_AC2_df <- sup_AC1_df |> dplyr::filter(sup_AC2 == 5 | is.na(sup_AC2))
nrow(sup_AC1_df) - nrow(sup_AC2_df) # (42 in Excel)

# exclude what sex is not matched
df <- sup_AC2_df |> dplyr::filter(sex != 3)
nrow(df)
```

### Aggregate Variables

#### Prestige

```{r}
prestige_df <-
  df |>
  mutate(
    prestige1 = ifelse(perspective == "leader", sup_ques_1_1, sub_ques_1_1),
    prestige2 = ifelse(perspective == "leader", sup_ques_1_2, sub_ques_1_2),
    prestige3 = ifelse(perspective == "leader", sup_ques_1_3, sub_ques_1_3),
    prestige4 = ifelse(perspective == "leader", sup_ques_1_4, sub_ques_1_4),
    prestige5 = ifelse(perspective == "leader", sup_ques_1_5, sub_ques_1_5),
    prestige6 = ifelse(perspective == "leader", sup_ques_1_6, sub_ques_1_6),
    prestige7 = ifelse(perspective == "leader", sup_ques_1_7, sub_ques_1_7),
    prestige8 = ifelse(perspective == "leader", sup_ques_1_8, sub_ques_1_8),
    prestige9 = ifelse(perspective == "leader", sup_ques_1_9, sub_ques_1_9),
  ) |>
  mutate(
    prestige2 = 8 - prestige2,
    prestige4 = 8 - prestige4,
    prestige9 = 8 - prestige9
  ) |>
  dplyr::select(starts_with("prestige"))
# glimpse(prestige_df)
```

```{r}
cormat <- corr.test(prestige_df)
cormat
psych::alpha(prestige_df)
df$prestige <- rowMeans(prestige_df)
```

#### TRIM

```{r}
# TRIM
raw_trim_df <-
  df |>
  mutate(
    trim1 = ifelse(perspective == "leader", sup_ques_2_1, sub_ques_2_1),
    trim2 = ifelse(perspective == "leader", sup_ques_2_2, sub_ques_2_2),
    trim3 = ifelse(perspective == "leader", sup_ques_2_3, sub_ques_2_3),
    trim4 = ifelse(perspective == "leader", sup_ques_2_4, sub_ques_2_4),
    trim5 = ifelse(perspective == "leader", sup_ques_2_5, sub_ques_2_5),
    trim6 = ifelse(perspective == "leader", sup_ques_2_6, sub_ques_2_6),
    trim7 = ifelse(perspective == "leader", sup_ques_2_7, sub_ques_2_7),
    trim8 = ifelse(perspective == "leader", sup_ques_2_8, sub_ques_2_8),
    trim9 = ifelse(perspective == "leader", sup_ques_2_9, sub_ques_2_9),
    trim10 = ifelse(perspective == "leader", sup_ques_2_10, sub_ques_2_10),
    trim11 = ifelse(perspective == "leader", sup_ques_2_11, sub_ques_2_11),
    trim12 = ifelse(perspective == "leader", sup_ques_2_12, sub_ques_2_12),
    trim13 = ifelse(perspective == "leader", sup_ques_2_13, sub_ques_2_13),
    trim14 = ifelse(perspective == "leader", sup_ques_2_14, sub_ques_2_14),
    trim15 = ifelse(perspective == "leader", sup_ques_2_15, sub_ques_2_15),
    trim16 = ifelse(perspective == "leader", sup_ques_2_16, sub_ques_2_16),
    trim17 = ifelse(perspective == "leader", sup_ques_2_17, sub_ques_2_17),
    trim18 = ifelse(perspective == "leader", sup_ques_2_18, sub_ques_2_18)
  ) |>
  dplyr::select(starts_with("trim"))
# glimpse(raw_trim_df)

re_trim_id <- c(1, 2, 4, 5, 7, 9, 10, 11, 13, 15, 17, 18)
trim_id <- c(3, 6, 8, 12, 14, 16)
re_trim_cols <- paste0("trim", re_trim_id)
trim_cols <- paste0("trim", trim_id)
re_trim_df <-
  raw_trim_df |>
  dplyr::select(all_of(re_trim_cols))
re_trim_df <- 8 - re_trim_df
# glimpse(re_trim_df)
trim_df <- raw_trim_df |>
  dplyr::select(all_of(trim_cols)) |>
  cbind(re_trim_df)
# glimpse(trim_df)
```

```{r}
psych::alpha(trim_df)
df$trim <- rowMeans(trim_df)
```

### Write processed data to CSV


```{r}
selected_df <-
  df |>
  dplyr::select(
    apology,
    perspective,
    sex,
    scneario,
    trim,
    prestige
  )
write.csv(selected_df, "data/processed/study_2.csv")
```


## Main Analysis

### Plot function

```{r}
plot_anova <- function(data, y_colname) {
  # y_colname <- "prestige"
  # scneario_num <- 1

  create_title <- function(category_value) {
    return(paste("Scenario", category_value))
  }

  plt_df <- data |>
    dplyr::filter(perspective != "")

  color_labels <- c(
    "costly.1" = "Costly (male)",
    "costly.2" = "Costly (female)",
    "noncostly.1" = "Non-costly (male)",
    "noncostly.2" = "Non-costly (female)"
  )

  color_interaction <- interaction(factor(plt_df$apology), factor(plt_df$sex))
  plt <- ggplot(
    plt_df,
    mapping = aes(
      x = perspective,
      y = .data[[y_colname]],
      fill = color_interaction
    )
  ) +
    theme_bw() +
    geom_violin(
      aes(alpha = color_interaction),
      color = NA,
      position = position_dodge(0.8)
    ) +
    geom_boxplot(
      color = "black",
      alpha = 0,
      width = 0.3,
      position = position_dodge(0.8),
      outlier.shape = NA,
      fatten = 1
    ) +
    stat_summary(
      fun = mean,
      geom = "point",
      shape = 18,
      size = 3,
      position = position_dodge(0.8)
    ) +
    scale_alpha_manual(
      name = "Perspective",
      labels = color_labels,
      values = c(
        "costly.1" = 0.9,
        "costly.2" = 0.3,
        "noncostly.1" = 0.9,
        "noncostly.2" = 0.3
      )
    ) +
    scale_fill_manual(
      name = "Perspective",
      labels = color_labels,
      values = c(
        "costly.1" = "#F8766D",
        "costly.2" = "#F8766D",
        "noncostly.1" = "#00BFC4",
        "noncostly.2" = "#00BFC4"
      )
    ) +
    facet_wrap(~scneario, ncol = 2, labeller = "label_both") +
    labs(
      x = "Perspective",
      y = stringr::str_to_sentence(y_colname),
      title = stringr::str_to_sentence(paste(y_colname)),
    ) +
    scale_y_continuous(
      limits = c(1, 7),
      breaks = seq(1, 7, 1)
    )

  return(plt)
}
```


### ANOVA (prestige)

#### Plot

```{r}
plot_anova(df, "prestige")
```

#### Analysis

```{r}
tapply(df$prestige, list(df$apology, df$sex), mean)
tapply(df$prestige, list(df$apology, df$sex), sd)
aov_res_1 <-
  aov(
    prestige ~ factor(perspective) * factor(apology) * factor(scneario) * factor(sex),
    data = df
  )
summary(aov_res_1)
```

### ANOVA (TRIM)

#### Plot

```{r}
plot_anova(df, "trim")
```

#### Analysis

```{r}
tapply(df$trim, list(df$apology, df$sex), mean)
tapply(df$trim, list(df$apology, df$sex), sd)
aov_res_2 <-
  aov(
    trim ~ factor(perspective) * factor(apology) * factor(scneario) * factor(sex),
    data = df
  )
summary(aov_res_2)
```
